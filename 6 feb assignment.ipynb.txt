 ans 1 def product_of_numbers(lst):
    flat_lst = []
    for item in lst:
        if isinstance(item, (int, float)):
            flat_lst.append(item)
        elif isinstance(item, str) and item.isnumeric():
            flat_lst.append(int(item))
        elif isinstance(item, dict):
            for k, v in item.items():
                if isinstance(k, (int, float)):
                    flat_lst.append(k)
                elif isinstance(k, str) and k.isnumeric():
                    flat_lst.append(int(k))
                if isinstance(v, (int, float)):
                    flat_lst.append(v)
                elif isinstance(v, str) and v.isnumeric():
                    flat_lst.append(int(v))
        elif isinstance(item, (list, set, tuple)):
            flat_lst.extend(product_of_numbers(item))
    product = 1
    for num in flat_lst:
        product *= num
    return product


list1 = [1,2,3,4, [44,55,66, True], False, (34,56,78,89,34), {1,2,3,3,2,1}, {1:34, "key2": [55, 67, 78, 89], 4: (45, 22, 61, 34)}, [56, 'data science'], 'Machine Learning']

result = product_of_numbers(list1)

print(result)  # Output: 2444723292118400000



ans 2 def encrypt_message(message):
    message = message.lower()
    encrypted_message = ""
    for char in message:
        if char == " ":
            encrypted_message += "$"
        elif char.isalpha():
            encrypted_char = chr(219 - ord(char))
            encrypted_message += encrypted_char
        else:
            encrypted_message += char
    return encrypted_message



input_sentence = "I want to become a Data Scientist."
encrypted_sentence = encrypt_message(input_sentence)
print(encrypted_sentence)  # Output: r dvmg gl yznvnr z wztz hvxsvm.
